{"version":3,"sources":["pages/Home/Home.js","pages/Dashboard/styles.js","pages/Dashboard/Dashboard.js","pages/Login/styles.js","pages/Login/Login.js","pages/Signup/styles.js","pages/Signup/SignUp.js","pages/Sensor/styles.js","pages/Sensor/Sensor.js","Routes/routes.js","App.js","serviceWorker.js","index.js","assets/pev.png"],"names":["Home","className","Component","Container","styled","div","Button","button","props","primary","GreenButton","ReactFC","fcRoot","FusionCharts","Widgets","FusionTheme","chartConfigs","type","width","height","dataFormat","dataSource","Dashboard","state","sensors","chart_data","charts","console","log","fetch","then","res","json","sensorIDs","Promise","all","map","sid","getData","chartDataList","index","chartData","key","push","renderCharts","deepCopyOf","setState","catch","url","e","preventDefault","window","location","href","this","onClick","handleClick","logoutClick","Form","form","Login","username","password","error","onSubmit","handleSubmit","action","method","src","Logo","alt","placeholder","onChange","target","value","name","to","SignUp","email","handleSignUp","alert","Sensor","sensor_id","volume","time","Routes","exact","path","component","App","Navbar","fluid","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","pullRight","NavItem","React","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.86e0bd61.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./Home.css\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (           \r\n      <div className=\"Home\">\r\n      <div className=\"lander\">\r\n        <h1>Scratch</h1>\r\n        <p>A simple note taking app</p>\r\n      </div>\r\n    </div>\r\n\r\n     );\r\n  }\r\n}\r\n\r\nexport default Home;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  background: transparent;\r\n  font-size: 16px;\r\n  border-radius: 3px;\r\n  color: palevioletred;\r\n  color: ${props => (props.primary ? 'violet' : 'palevioletred')};\r\n  border: ${props =>\r\n    props.primary ? '2px solid violet' : '2px solid palevioletred'};\r\n  margin: 0 1em;\r\n  padding: 0.25em 1em;\r\n  transition: 0.5s all ease-out;\r\n  &:hover {\r\n    color: white;\r\n    background-color: ${props =>\r\n      props.primary ? 'violet' : 'palevioletred'};\r\n  }\r\n`;\r\n\r\nexport const GreenButton = styled(Button)`\r\n  background-color: white;\r\n  color: green;\r\n  border-color: green;\r\n`;\r\n","import React, { Component } from 'react';\r\n\r\n// Step 2 - Including the react-fusioncharts component\r\nimport ReactFC from 'react-fusioncharts';\r\n\r\n// Step 3 - Including the fusioncharts library\r\nimport FusionCharts from 'fusioncharts';\r\n\r\n// Step 4 - Including the chart type\r\nimport Widgets from 'fusioncharts/fusioncharts.widgets';\r\n\r\n// Step 5 - Including the theme as fusion\r\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\r\nimport { deepCopyOf } from 'react-fusioncharts/lib/utils/utils';\r\n\r\nimport {Container, GreenButton} from  './styles';\r\n// Step 6 - Adding the chart and theme as dependency to the core fusioncharts\r\nReactFC.fcRoot(FusionCharts, Widgets, FusionTheme);\r\n\r\n// Step 7 - Creating the JSON object to store the chart configurations\r\nconst chartConfigs = {\r\n  type: 'angulargauge', // The gauge type\r\n  width: '450', // Width of the gauge\r\n  height: '250', // Height of the gauge\r\n  dataFormat: 'json', // Data type\r\n  dataSource: null,\r\n};\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          sensors: [],\r\n          chart_data: null,\r\n          charts:[],\r\n        };\r\n      }\r\n      componentDidMount() {\r\n        console.log(\"Getting sensors...\")\r\n        let url = 'http://localhost:5000/sensor/all'\r\n        const base_sensor_volume_url = 'http://localhost:5000/sensor/volume/'\r\n    \r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(sensorIDs => {\r\n            Promise.all(sensorIDs.map(sid => this.getData(base_sensor_volume_url + sid))).then(chartDataList => {\r\n              let index =0\r\n              for(let chartData of chartDataList){\r\n                chartConfigs['dataSource'] =chartData\r\n                chartConfigs.key = index++\r\n                this.state.charts.push(this.renderCharts(deepCopyOf(chartConfigs)))\r\n              }\r\n              this.setState({charts: this.state.charts})\r\n            })\r\n           \r\n          })\r\n          .catch(console.log);\r\n    \r\n      }\r\n    \r\n      getData(url) {\r\n        return fetch(url)\r\n          .then(res => res.json())\r\n      }\r\n\r\n      updateVolumeCharts(){\r\n        let url = 'http://localhost:5000/sensor/all'\r\n        const base_sensor_volume_url = 'http://localhost:5000/sensor/volume/'\r\n    \r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(sensorIDs => {\r\n            Promise.all(sensorIDs.map(sid => this.getData(base_sensor_volume_url + sid))).then(chartDataList => {\r\n              let index =0\r\n              for(let chartData of chartDataList){\r\n                chartConfigs['dataSource'] =chartData\r\n                chartConfigs.key = index++\r\n                this.state.charts.push(this.renderCharts(deepCopyOf(chartConfigs)))\r\n              }\r\n              this.setState({charts: this.state.charts})\r\n            })\r\n           \r\n          })\r\n          .catch(console.log);\r\n      }\r\n    \r\n      renderCharts(chartConfigs) {\r\n        console.log(chartConfigs)\r\n        return <ReactFC {...chartConfigs} />;\r\n      }\r\n\r\n      handleClick(e){\r\n        e.preventDefault();\r\n        let url = 'http://localhost:5000/sensor/all'\r\n        const base_sensor_volume_url = 'http://localhost:5000/sensor/volume/'\r\n    \r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(sensorIDs => {\r\n            Promise.all(sensorIDs.map(sid => this.getData(base_sensor_volume_url + sid))).then(chartDataList => {\r\n              let index =0\r\n              for(let chartData of chartDataList){\r\n                chartConfigs['dataSource'] =chartData\r\n                chartConfigs.key = index++\r\n                this.state.charts.push(this.renderCharts(deepCopyOf(chartConfigs)))\r\n              }\r\n              this.setState({charts: this.state.charts})\r\n            })\r\n           \r\n          })\r\n          .catch(console.log);\r\n      }\r\n\r\n      logoutClick(e){\r\n        let url = 'http://localhost:5000/logout.html'\r\n        //fetch(url).catch(console.log);\r\n        window.location.href = url;\r\n      }\r\n\r\n  render() {\r\n    return (  \r\n      <div>\r\n        <Container> \r\n          <div>\r\n            {this.state.charts}\r\n          </div>\r\n        </Container>\r\n        <div>\r\n          <GreenButton onClick={this.handleClick}>\r\n            Atualizar\r\n          </GreenButton>\r\n          <GreenButton onClick={this.logoutClick}>\r\n            Logout\r\n          </GreenButton>\r\n        </div>\r\n       </div>\r\n     );\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  width: 400px;\r\n  background: #fff;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  img {\r\n    width: 100px;\r\n    margin: 10px 0 40px;\r\n  }\r\n  p {\r\n    color: #ff3333;\r\n    margin-bottom: 15px;\r\n    border: 1px solid #ff3333;\r\n    padding: 10px;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n  input {\r\n    flex: 1;\r\n    height: 46px;\r\n    margin-bottom: 15px;\r\n    padding: 0 20px;\r\n    color: #777;\r\n    font-size: 15px;\r\n    width: 100%;\r\n    border: 1px solid #ddd;\r\n    &::placeholder {\r\n      color: #999;\r\n    }\r\n  }\r\n  button {\r\n    color: #fff;\r\n    font-size: 16px;\r\n    background: #fc6963;\r\n    height: 56px;\r\n    border: 0;\r\n    border-radius: 5px;\r\n    width: 100%;\r\n  }\r\n  hr {\r\n    margin: 20px 0;\r\n    border: none;\r\n    border-bottom: 1px solid #cdcdcd;\r\n    width: 100%;\r\n  }\r\n  a {\r\n    font-size: 16;\r\n    font-weight: bold;\r\n    color: #999;\r\n    text-decoration: none;\r\n  }\r\n`;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../../assets/pev.png\";\r\nimport { Form, Container } from \"./styles\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n  handleSubmit(){\r\n    return\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        \r\n        <Form onSubmit={this.handleSubmit} action='http://localhost:5000/login' method='post'>\r\n          <img src={Logo} alt=\"PEV logo\" />\r\n          {this.state.error && <p>{this.state.error}</p>}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            onChange={e => this.setState({ username: e.target.value })}\r\n            name=\"username\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Senha\"\r\n            onChange={e => this.setState({ password: e.target.value })}\r\n            name=\"password\"\r\n          />\r\n          <button type=\"submit\">Login</button>\r\n          <hr />\r\n          <Link to=\"/singup\">SingUp</Link>\r\n        </Form>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  width: 400px;\r\n  background: #fff;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  img {\r\n    width: 100px;\r\n    margin: 10px 0 40px;\r\n  }\r\n  p {\r\n    color: #ff3333;\r\n    margin-bottom: 15px;\r\n    border: 1px solid #ff3333;\r\n    padding: 10px;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n  input {\r\n    flex: 1;\r\n    height: 46px;\r\n    margin-bottom: 15px;\r\n    padding: 0 20px;\r\n    color: #777;\r\n    font-size: 15px;\r\n    width: 100%;\r\n    border: 1px solid #ddd;\r\n    &::placeholder {\r\n      color: #999;\r\n    }\r\n  }\r\n  button {\r\n    color: #fff;\r\n    font-size: 16px;\r\n    background: #fc6963;\r\n    height: 56px;\r\n    border: 0;\r\n    border-radius: 5px;\r\n    width: 100%;\r\n  }\r\n  hr {\r\n    margin: 20px 0;\r\n    border: none;\r\n    border-bottom: 1px solid #cdcdcd;\r\n    width: 100%;\r\n  }\r\n  a {\r\n    font-size: 16;\r\n    font-weight: bold;\r\n    color: #999;\r\n    text-decoration: none;\r\n  }\r\n`;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Logo from \"../../assets/pev.png\";\r\n\r\nimport { Form, Container } from \"./styles\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleSignUp = e => {\r\n    alert(\"Eu vou te registrar\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Form onSubmit={this.handleSignUp}  action='http://localhost:5000/register.html' method='post'>\r\n          <img src={Logo} alt=\"PEV logo\" />\r\n          {this.state.error && <p>{this.state.error}</p>}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nome de usuário\"\r\n            onChange={e => this.setState({ name: e.target.value })}\r\n            name=\"name\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            onChange={e => this.setState({ username: e.target.value })}\r\n            name=\"username\"\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Endereço de e-mail\"\r\n            onChange={e => this.setState({ email: e.target.value })}\r\n            name = \"email\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Senha\"\r\n            onChange={e => this.setState({ password: e.target.value })}\r\n            name=\"password\"\r\n          />\r\n          <button type=\"submit\">Cadastrar grátis</button>\r\n          <hr />\r\n          <Link to=\"/login\">Login</Link>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  width: 400px;\r\n  background: #fff;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  img {\r\n    width: 100px;\r\n    margin: 10px 0 40px;\r\n  }\r\n  p {\r\n    color: #ff3333;\r\n    margin-bottom: 15px;\r\n    border: 1px solid #ff3333;\r\n    padding: 10px;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n  input {\r\n    flex: 1;\r\n    height: 46px;\r\n    margin-bottom: 15px;\r\n    padding: 0 20px;\r\n    color: #777;\r\n    font-size: 15px;\r\n    width: 100%;\r\n    border: 1px solid #ddd;\r\n    &::placeholder {\r\n      color: #999;\r\n    }\r\n  }\r\n  button {\r\n    color: #fff;\r\n    font-size: 16px;\r\n    background: #fc6963;\r\n    height: 56px;\r\n    border: 0;\r\n    border-radius: 5px;\r\n    width: 100%;\r\n  }\r\n  hr {\r\n    margin: 20px 0;\r\n    border: none;\r\n    border-bottom: 1px solid #cdcdcd;\r\n    width: 100%;\r\n  }\r\n  a {\r\n    font-size: 16;\r\n    font-weight: bold;\r\n    color: #999;\r\n    text-decoration: none;\r\n  }\r\n`;\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  background: transparent;\r\n  font-size: 16px;\r\n  border-radius: 3px;\r\n  color: palevioletred;\r\n  color: ${props => (props.primary ? 'violet' : 'palevioletred')};\r\n  border: ${props =>\r\n    props.primary ? '2px solid violet' : '2px solid palevioletred'};\r\n  margin: 0 1em;\r\n  padding: 0.25em 1em;\r\n  transition: 0.5s all ease-out;\r\n  &:hover {\r\n    color: white;\r\n    background-color: ${props =>\r\n      props.primary ? 'violet' : 'palevioletred'};\r\n  }\r\n`;\r\n\r\nexport const GreenButton = styled(Button)`\r\n  background-color: white;\r\n  color: green;\r\n  border-color: green;\r\n`;","import React, { Component } from \"react\";\r\nimport Logo from \"../../assets/pev.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Container} from \"./styles\";\r\n\r\nclass Sensor extends Component {\r\n  state = {\r\n    sensor_id:\"\",\r\n    volume:\"\",\r\n    time:\"\",\r\n    error: \"\"\r\n  };\r\n\r\n  handleSignUp = e => {\r\n    alert(\"Eu vou registrar\");\r\n  };\r\n  logoutClick(e){\r\n    let url = 'http://localhost:5000/logout.html'\r\n    //fetch(url).catch(console.log);\r\n    window.location.href = url;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Form onSubmit={this.handleSignUp}  action='http://localhost:5000/sensor' method='post'>\r\n          <img src={Logo} alt=\"PEV logo\" />\r\n          {this.state.error && <p>{this.state.error}</p>}\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"sensor_id\"\r\n            onChange={e => this.setState({ sensor_id: e.target.value })}\r\n            name=\"sensor_id\"\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Volume\"\r\n            onChange={e => this.setState({ volume: e.target.value })}\r\n            name=\"volume\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"dd-mm-YY-hh:mm:ss\"\r\n            onChange={e => this.setState({ time: e.target.value })}\r\n            name = \"time\"\r\n          />\r\n          <button type=\"submit\">Registrar grátis</button>\r\n          <hr />\r\n        <Link to=\"/logout\">Logout</Link>\r\n        </Form>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sensor;","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"../pages/Home/Home\";\r\nimport Dashboard from '../pages/Dashboard/Dashboard';\r\nimport Login from '../pages/Login/Login';\r\nimport SignUp from '../pages/Signup/SignUp'\r\nimport Sensor from '../pages/Sensor/Sensor'\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/dashboard' component={Dashboard} />\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/signup' component={SignUp} />\r\n        <Route path='/sensor' component={Sensor} />\r\n    </Switch>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport {Nav, Navbar, NavItem} from \"react-bootstrap\";\nimport Routes from \"./Routes/routes\"\n\nclass App extends React.Component {\n  \n  render() {\n    return (\n         <div className=\"App container\">\n           <Navbar fluid collapseOnSelect>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <Link to=\"/\">Home</Link>\n          </Navbar.Brand>\n          <Navbar.Toggle />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <Nav pullRight>\n            <NavItem href=\"/signup\">Signup</NavItem>\n            <NavItem href=\"/login\">Login</NavItem>\n            <NavItem href=\"/dashboard\">Dashboard</NavItem>\n            <NavItem href=\"/sensor\">Sensor</NavItem>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Routes />\n        </div>\n      );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n\n                <BrowserRouter>\n                    <App />\n                   \n                </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pev.8a94466a.png\";"],"sourceRoot":""}